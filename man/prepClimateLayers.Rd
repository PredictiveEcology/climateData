% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prepClimateLayers.R
\name{prepClimateLayers}
\alias{prepClimateLayers}
\title{Prepare rasters for derived and 'as-is' climate variables}
\usage{
prepClimateLayers(
  climateVarsList,
  srcdir,
  dstdir,
  tile = NULL,
  future_years = NULL,
  future_period = NULL,
  historic_years = NULL,
  historic_period = NULL,
  gcm = NULL,
  ssp = NULL,
  cl = NULL,
  studyArea = NULL,
  studyAreaName = NULL,
  rasterToMatch = NULL,
  currentModuleName = "NoModule",
  ...
)
}
\arguments{
\item{climateVarsList}{TODO}

\item{srcdir, dstdir}{character. vector of directory paths to source and destination raster files.}

\item{tile}{integer. tile id (e.g., the output of \code{tileID()}).}

\item{historic_years, future_years}{integer. consecutive data years to use (e.g., \code{2011:2100}).}

\item{historic_period, future_period}{character.
climate normal periods to use (e.g., \code{c("1951_1980", "1981_2010")}).}

\item{gcm}{character. name of GCM available in ClimateNA.}

\item{ssp}{integer. one of the available SSPs in ClimateNA (e.g., \code{370} or \code{585})}

\item{cl}{cluster object. if \code{NULL} (default), a cluster will be created using up to
\code{length(climVar)} number of CPU cores for parallel computation.
Users can pass their own \code{cl} object or specify option
\code{parallelly.availableCores.fallback} to reduce the number of cores used.
Users may also need to specify setting up the cluster using 'sequential',
rather than the default 'parallel', via \code{parallelly.makeNodePSOCK.setup_strategy}.
See \code{?parallelly.options}.}

\item{studyArea}{an \code{sf} or \code{SpatVect} polygon delineating the boundaries of the study area.
typically used to crop/mask rasters when \code{rasterToMatch} is not supplied.
passed to \code{\link[reproducible:postProcessTo]{reproducible::postProcessTo()}}.}

\item{studyAreaName}{character string giving  the name of the study area.}

\item{rasterToMatch}{a \code{SpatRaster} object to use as the template for GIS operations.
passed to \code{\link[reproducible:postProcessTo]{reproducible::postProcessTo()}}.}

\item{currentModuleName}{TODO}

\item{...}{additional arguments (not used)}
}
\description{
TODO
}
\examples{
if (require("archive", quietly = TRUE) &&
    require("googledrive", quietly = TRUE) &&
    require("SpaDES.tools", quietly = TRUE) &&
    !isTRUE(as.logical(Sys.getenv("CI", "false")))) {
  dPath <- file.path(tempdir(), "test_prepClimateLayers")
  climateType <- "historic"
  climatePath <- file.path(dPath, "climate") |> reproducible::checkPath(create = TRUE)
  climatePathOut <- file.path(climatePath, "outputs") |> reproducible::checkPath(create = TRUE)
  historic_prd <- c("1951_1980", "1981_2010")
  historic_yrs <- c(2011:2015)
  future_yrs <- c(2021:2025)
  GCM <- "CanESM5"
  SSP <- 370
  studyArea <- SpaDES.tools::randomStudyArea(size = 1e10)
  rasterToMatch <- terra::rast(studyArea, resolution = 250) |>
    terra::rasterize(studyArea, y = _)

  ## ATA mixes seasonal and normal variables; uses custom fun
  ## CMI uses yearly variable; no fun (as is)
  ## FFP uses yearly  variable; no fun (as is); similar name to bFFP and eFFP
  ## MDC uses monthly vars; uses custom fun
  climateVariables <- list(
    historic_ATA = list(
      vars = c("historic_MAT", "historic_MAT_normal"),
      fun = quote(calcATA),
      .dots = list(historic_period = historic_prd, historic_years = historic_yrs)
    ),
    future_ATA = list(
      vars = c("future_MAT", "historic_MAT_normal"),
      fun = quote(calcATA),
      .dots = list(historic_period = historic_prd, future_years = future_yrs)
    ),
    historic_CMI = list(
      vars = "historic_CMI",
      fun = quote(calcAsIs),
      .dots = list(historic_years = historic_yrs)
    ),
    historic_CMI_normal = list(
      vars = "historic_CMI_normal",
      fun = quote(calcCMInormal),
      .dots = list(historic_period = historic_prd, historic_years = historic_yrs)
    ),
    future_FFP = list(
      vars = "future_FFP", ## ensure FFP only; not bFFP nor eFFP
      fun = quote(calcAsIs),
      .dots = list(future_years = future_yrs)
    ),
    historic_MDC = list(
      vars = c(sprintf("historic_PPT\%02d", 4:9), sprintf("historic_Tmax\%02d", 4:9)),
      fun = quote(calcMDC),
      .dots = list(historic_years = historic_yrs)
    )
  )

  climateRasters <- prepClimateLayers(
    climateVarsList = climateVariables,
    srcdir = climatePath,    ## raw inputs, downloaded from Google Drive
    dstdir = climatePathOut, ## intermediate + final outputs
    historic_years = historic_yrs,
    future_years = future_yrs,
    historic_period = historic_prd,
    future_period = NULL,
    gcm = GCM,
    ssp = SSP,
    cl = NULL,
    studyArea = studyArea,
    studyAreaName = "my_study_area",
    rasterToMatch = rasterToMatch
  )
}
}
